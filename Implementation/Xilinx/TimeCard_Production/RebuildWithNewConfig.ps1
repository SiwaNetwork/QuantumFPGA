# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ TimeCard_Production —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ—à–∏–≤–∫—É

$ErrorActionPreference = 'Stop'

Write-Host "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ TimeCard_Production —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
$configType = ""
if ((Get-Content "DefaultConfigFile.txt" | Select-String "—É–ø—Ä–∞–≤–ª—è–µ–º—ã–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º").Count -gt 0) {
    $configType = "Managed"
    Write-Host "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
} elseif ((Get-Content "DefaultConfigFile.txt" | Select-String "–Ω–µ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–º DCXO").Count -gt 0) {
    $configType = "Unmanaged"
    Write-Host "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –Ω–µ—É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ DCXO" -ForegroundColor Yellow
} else {
    Write-Host "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Vivado
$vivadoPath = 'C:\Xilinx\Vivado\2022.1\bin\vivado.bat'
if (-not (Test-Path $vivadoPath)) {
    Write-Error "Vivado 2022.1 –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $vivadoPath"
    exit 1
}

Write-Host "–ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π: $configType" -ForegroundColor Cyan

# –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Vivado
Write-Host "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Vivado..." -ForegroundColor Gray
taskkill /F /IM vivado.exe /T 2>$null
taskkill /F /IM vivado.bat /T 2>$null
Start-Sleep -Seconds 2

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ–µ–∫—Ç
if (Test-Path 'TimeCard') {
    Write-Host "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ TimeCard..." -ForegroundColor Gray
    Remove-Item -Recurse -Force 'TimeCard'
}

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π TCL —Å–∫—Ä–∏–ø—Ç
$tclScript = "rebuild_$configType.tcl"
$tclContent = @"
source CreateProject.tcl
source CreateBinariesAll.tcl
exit
"@

Set-Content -Path $tclScript -Value $tclContent -Encoding ascii

try {
    Write-Host "–ó–∞–ø—É—Å–∫ Vivado –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏..." -ForegroundColor Cyan
    & $vivadoPath -mode batch -source $tclScript
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "`n‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        Write-Host "`nüìÅ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ—à–∏–≤–∫–∏:" -ForegroundColor Magenta
        Get-ChildItem -File 'Binaries' | Sort-Object LastWriteTime -Descending | 
            Select-Object Name, @{Name="Size(MB)";Expression={[math]::Round($_.Length/1MB,2)}}, LastWriteTime | 
            Format-Table -AutoSize | Out-String -Width 4096 | Write-Output
        
        Write-Host "`nüéØ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è $configType –ø—Ä–∏–º–µ–Ω–µ–Ω–∞:" -ForegroundColor Yellow
        if ($configType -eq "Managed") {
            Write-Host "- SMA3: 10 –ú–ì—Ü —á–µ—Ä–µ–∑ Adjustable Clock + PPS Slave" -ForegroundColor Green
            Write-Host "- SMA1: 1 –ú–ì—Ü" -ForegroundColor Green
            Write-Host "- SMA2: 100 –∫–ì—Ü" -ForegroundColor Green
            Write-Host "- SMA4: 10 –∫–ì—Ü" -ForegroundColor Green
        } else {
            Write-Host "- SMA3: 10 –ú–ì—Ü —á–µ—Ä–µ–∑ Signal Generator —Å –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–µ–π" -ForegroundColor Green
            Write-Host "- SMA1: 1 –ú–ì—Ü" -ForegroundColor Green
            Write-Host "- SMA2: 100 –∫–ì—Ü" -ForegroundColor Green
            Write-Host "- SMA4: 10 –∫–ì—Ü" -ForegroundColor Green
            Write-Host "- Frequency Counter –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥—Ä–µ–π—Ñ–∞" -ForegroundColor Cyan
        }
        
        Write-Host "`nüìä RGB LED –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö SMA —Ä–∞–∑—ä–µ–º–æ–≤" -ForegroundColor Magenta
        
    } else {
        Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–µ. –ö–æ–¥ –≤—ã—Ö–æ–¥–∞: $LASTEXITCODE"
    }
} catch {
    Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: $($_.Exception.Message)"
} finally {
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    if (Test-Path $tclScript) {
        Remove-Item $tclScript -Force
    }
}

Write-Host "`n–ì–æ—Ç–æ–≤–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Factory_TimeCardOS_Production.bin –¥–ª—è –ø—Ä–æ—à–∏–≤–∫–∏." -ForegroundColor Green
